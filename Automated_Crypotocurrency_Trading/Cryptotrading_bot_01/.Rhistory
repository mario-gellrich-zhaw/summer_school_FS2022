df
macd <- MACD(df$Close, nFast = 12, nSlow = 26, nSig = 9, maType="EMA", percent = TRUE)
macd
df <- subset(cbind(df, data.frame(macd[,1:2])), OpenTime >= start.time)
df
macd <- MACD(df$Close, nFast = 12, nSlow = 26, nSig = 9, maType="EMA", percent = TRUE)
macd
df   <- cbind(df, data.frame(macd[,1:2]))
df
library(binancer)
# Get valid symbol names (names of coin pairs)
binance_symbols(all = FALSE)
# Settings
coin.pair      = 'NEARUSDT'
time.interval  = '15m'
start.time     = '2021-06-01 00:00:00'
# Get data
df.orig   <- binance_klines(coin.pair, interval=time.interval, start_time=start.time, end_time=Sys.Date())
df.orig[1:10,]
# Rename the data
df        <- df.orig[,c('open_time', 'open', 'high', 'low', 'close', 'volume')]
names(df) <- c('OpenTime', 'Open', 'High', 'Low', 'Close', 'Volume')
df[1:10,]
dim(df)
macd <- MACD(df$Close, nFast = 12, nSlow = 26, nSig = 9, maType="EMA", percent = TRUE)
macd
df   <- cbind(df, data.frame(macd[,1:2]))
df
macd <- MACD(df$Close, nFast = 12, nSlow = 26, nSig = 9, maType="EMA", percent = TRUE)
macd
df   <- cbind(df, data.frame(macd[,1:2]))
df
macd <- MACD(df$Close, nFast = 12, nSlow = 26, nSig = 9, maType="EMA", percent = TRUE)
macd
df   <- cbind(df, data.frame(macd[,1:2]))
df
macd <- MACD(df$Close, nFast = 12, nSlow = 26, nSig = 9, maType="EMA", percent = TRUE)
macd
df   <- cbind(df, data.frame(macd[,1:2]))
df
library(binancer)
# Get valid symbol names (names of coin pairs)
binance_symbols(all = FALSE)
# Settings
coin.pair      = 'NEARUSDT'
time.interval  = '15m'
start.time     = '2021-06-01 00:00:00'
# Get data
df.orig   <- binance_klines(coin.pair, interval=time.interval, start_time=start.time, end_time=Sys.Date())
df.orig[1:10,]
# Rename the data
df        <- df.orig[,c('open_time', 'open', 'high', 'low', 'close', 'volume')]
names(df) <- c('OpenTime', 'Open', 'High', 'Low', 'Close', 'Volume')
df[1:10,]
dim(df)
macd$macd
# Calculate MACD and signal
macd <- MACD(df$Close, nFast = 12, nSlow = 26, nSig = 9, maType="EMA", percent = TRUE)
macd
# Join the calulated values to the data frame
df$MACD   <- data.frame(macd[,1])
df$Signal <- data.frame(macd[,2])
df[1:10,]
df
# Calculate MACD and signal
macd <- MACD(df$Close, nFast = 12, nSlow = 26, nSig = 9, maType="EMA", percent = TRUE)
macd
# Join the calulated values to the data frame
df$MACD   <- data.frame(macd[,1])
df$Signal <- data.frame(macd[,2])
df
# Create Bollinger Bands
bbands <- BBands(df[,c("High","Low","Close")])
bbands
# Join and subset data
df <- subset(cbind(df, data.frame(bbands[,1:3])), OpenTime >= start.time)
df
# Create Bollinger Bands
bbands <- BBands(df[,c("High","Low","Close")])
bbands
# Create Bollinger Bands
bbands <- BBands(df[,c("High","Low","Close")])
bbands
# Join and subset data
df$DN   <- data.frame(bbands[,1])
df$MAVG <- data.frame(bbands[,2])
df$UP   <- data.frame(bbands[,3])
df
# Get valid symbol names (names of coin pairs)
binance_symbols(all = FALSE)
# Settings
coin.pair      = 'NEARUSDT'
time.interval  = '15m'
start.time     = '2021-06-01 00:00:00'
# Get data
df.orig   <- binance_klines(coin.pair, interval=time.interval, start_time=start.time, end_time=Sys.Date())
df.orig[1:10,]
# Rename the data
df        <- df.orig[,c('open_time', 'open', 'high', 'low', 'close', 'volume')]
names(df) <- c('OpenTime', 'Open', 'High', 'Low', 'Close', 'Volume')
df[1:10,]
dim(df)
# Package for technical analysis (TA)
library(TTR)
# Create Bollinger Bands
bbands <- BBands(df[,c("High","Low","Close")])
bbands
# Join and subset data
df$DN   <- data.frame(bbands[,1])
df$MAVG <- data.frame(bbands[,2])
df$UP   <- data.frame(bbands[,3])
df
# Calculate MACD and signal
macd <- MACD(df$Close, nFast = 12, nSlow = 26, nSig = 9, maType="EMA", percent = TRUE)
macd
# Join the calulated values to the data frame
df$MACD   <- data.frame(macd[,1])
df$Signal <- data.frame(macd[,2])
df
# Calculate MACD and Signal
macd <- MACD(df$Close, nFast = 12, nSlow = 26, nSig = 9, maType="EMA", percent = TRUE)
macd
# Join the calulated values to the data frame
df$MACD   <- data.frame(macd[,1])
df$Signal <- data.frame(macd[,2])
df
library(plotly)
library(quantmod)
# Candlestick chart
fig <- df %>% plot_ly(x     = ~ OpenTime,
type  = 'candlestick',
open  = ~ Open,
close = ~ Close,
high  = ~ High,
low   = ~ Low,
# Fill Color of candles
increasing = list(line = list(color = '#17BECF')),
decreasing = list(line = list(color = '#7F7F7F'))
)
fig <- fig %>% layout(title = "Basic Candlestick Chart")
fig
# Create Bollinger Bands
bbands <- BBands(df[,c("High","Low","Close")], maType="MA")
bbands
# Create Bollinger Bands
bbands <- BBands(df[,c("High","Low","Close")], maType="SMA")
bbands
# Create Bollinger Bands
bbands <- BBands(df[,c("High","Low","Close")])
bbands
# Join and subset data
df$DN   <- data.frame(bbands[,1])
df$MAVG <- data.frame(bbands[,2])
df$UP   <- data.frame(bbands[,3])
df
# Create Bollinger Bands
bbands <- BBands(df[,c("High","Low","Close")], n=20, maType="SMA")
bbands
